input {
  beats {
    port => 5044
  }
}

filter {
  # For vsftpd logs (vsftpd.log and xferlog)
  if [log][file][path] =~ "/var/log/vsftpd.log|/var/log/xferlog/" {
    grok {
      match => {
        "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} vsftpd\[%{NUMBER:pid}\]: %{WORD:action} %{WORD:protocol} %{WORD:username} %{GREEDYDATA:message_details} Client \"%{IPV6:src_ip}|%{IPV4:src_ip}\""
      }
    }
    mutate {
      # Clean up `src_ip` by removing the `::ffff:` prefix for IPv6 addresses
      gsub => ["src_ip", "^::ffff:", ""]
    }
  }

  # SSH log section for /var/log/auth.log
  if [log][file][path] == "/var/log/auth.log" {

  # Grok pattern to capture Failed password attempts with IPv4 source IP
   grok {
     match => {
       "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} sshd\[%{NUMBER:pid}\]: Failed password for invalid user %{USER:username} from %{IPV4:src_ip} port %{NUMBER:port} ssh2"
     }
     add_tag => [ "ipv4", "failed_password" ]
   }

   # Grok pattern for Received disconnect from source IP
   grok {
     match => {
       "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} sshd\[%{NUMBER:pid}\]: Received disconnect from %{IPV4:src_ip} port %{NUMBER:port}:.*"
     }
     add_tag => [ "ipv4", "received_disconnect" ]
   }

   # Grok pattern for Disconnected user from SSH
   grok {
     match => {
       "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} sshd\[%{NUMBER:pid}\]: Disconnected from %{USER:username} %{IPV4:src_ip} port %{NUMBER:port}"
     }
     add_tag => [ "ipv4", "disconnected" ]
   }

 }


  # If additional filtering is needed (e.g., adding log_type or custom fields)
  if [log_type] == "ftp" {
    mutate {
      add_field => { "log_type" => "vsftpd" }
    }
  }
}


output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "filebeat-%{+YYYY.MM.dd}"
    user => "elastic"
    # Replace with user password
    password => "super_secret"
  }
}
